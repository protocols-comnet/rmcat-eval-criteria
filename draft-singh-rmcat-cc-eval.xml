<?xml version="1.0"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY rfc2119 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY rfc3550 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3550.xml">
<!ENTITY rfc3551 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3551.xml">
<!ENTITY rfc3611 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3611.xml">
<!ENTITY rfc4585 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4585.xml">
<!ENTITY rfc5506 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5506.xml">
<!ENTITY rfc5166 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5166.xml">
<!ENTITY rfc5033 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5033.xml">
<!ENTITY rfc5681 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5681.xml">
<!ENTITY I-D.jesup-rmcat-reqs PUBLIC "" 
"http://xml.resource.org/public/rfc/bibxml3/reference.I-D.jesup-rmcat-reqs.xml">
<!ENTITY I-D.ietf-avtcore-rtp-circuit-breakers PUBLIC "" 
"http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-avtcore-rtp-circuit-breakers.xml">
<!ENTITY I-D.ietf-ledbat-congestion PUBLIC "" 
"http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-ledbat-congestion.xml">
<!ENTITY I-D.ietf-xrblock-rtcp-xr-qoe PUBLIC "" 
"http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-xrblock-rtcp-xr-qoe.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc toc="yes" ?>
<?rfc compact="yes" ?>
<?rfc symrefs="yes" ?>
<rfc ipr="trust200902" docName="draft-singh-rmcat-cc-eval-04" category="info">
    <!-- What is the category field value-->
    <front>
        <title abbrev="Evaluating Congestion Control for RMCAT"> 
            Evaluating Congestion Control for Interactive Real-time Media
            <!--Evaluation Criteria for RTP Congestion Avoidance Techniques -->
        </title>
        
        <author fullname="Varun Singh" initials="V" surname="Singh">
            <organization>Aalto University</organization>
            <address>
                <postal>
                    <street>School of Electrical Engineering</street>
                    <street>Otakaari 5 A</street>
                    <city>Espoo</city>
                    <region>FIN</region>
                    <code>02150</code>
                    <country>Finland</country>
                </postal>
                <email>varun@comnet.tkk.fi</email>
                <uri>http://www.netlab.tkk.fi/~varun/</uri>
            </address>
        </author>
        
        <author initials="J." surname="Ott" fullname="Joerg Ott">
            <organization>Aalto University</organization>
            <address>
                <postal>
                    <street>School of Electrical Engineering</street>
                    <street>Otakaari 5 A</street>
                    <city>Espoo</city>
                    <region>FIN</region>
                    <code>02150</code>
                    <country>Finland</country>
                </postal>
                <email>jo@comnet.tkk.fi</email>
            </address>
        </author>
        
        <date year="2013"/>
        <area>TSV</area>
        <workgroup>RMCAT WG</workgroup>
        <keyword>RTP</keyword>
        <keyword>RTCP</keyword>
        <keyword>Congestion Control</keyword>
        <abstract>
            <t>The Real-time Transport Protocol (RTP) is used to transmit
            media in telephony and video conferencing applications. This
            document describes the guidelines to evaluate new congestion
            control algorithms for interactive point-to-point real-time
            media.</t>
        </abstract>
    </front>
    <middle>
        <section title="Introduction">
            
            <t>This memo describes the guidelines to help with evaluating
            new congestion control algorithms for interactive
            point-to-point real time media. The requirements for the
            congestion control algorithm are outlined in <xref
            target="I-D.jesup-rmcat-reqs" />). This document
            builds upon previous work at the IETF: <xref
            target="RFC5033">Specifying New Congestion Control
            Algorithms</xref> and <xref target="RFC5166">Metrics for the
            Evaluation of Congestion Control Algorithms</xref>.</t>
            
            <t>The guidelines proposed in the document are intended to help
            prevent a congestion collapse, promote fair capacity usage and
            optimize the media flow's throughput. Furthermore, the proposed
            algorithms are expected to operate within the envelope of the
            circuit breakers defined in <xref
            target="I-D.ietf-avtcore-rtp-circuit-breakers" />.</t>
            
            <t>This document only provides broad-level criteria for
            evaluating a new congestion control algorithm and the working
            group should expect a thorough scientific study to make its
            decision. The results of the evaluation are not expected to be
            included within the internet-draft but should be cited in the
            document.</t>
            
        </section>
        
        <section title="Terminology" anchor="sec-terminology">
            <!--<t> The key words "MUST", "MUST NOT", "REQUIRED", "SHALL",
            "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and
            "OPTIONAL" in this document are to be interpreted as described
            in BCP 14, <xref target="RFC2119" /> and indicate requirement
            levels for compliant implementations. </t> -->
            
            <t> The terminology defined in <xref target="RFC3550">RTP</xref>,
            <xref target="RFC3551">RTP Profile for Audio and Video Conferences
            with Minimal Control</xref>, <xref target="RFC3611">RTCP Extended
            Report (XR)</xref>, <xref target="RFC4585">Extended RTP Profile
            for RTCP-based Feedback (RTP/AVPF)</xref> and <xref
            target="RFC5506">Support for Reduced-Size RTCP</xref> apply.</t>
        </section>

        <section title="Metrics" anchor="cc-metrics"> 
            
        <t><xref target="RFC5166" /> describes the basic metrics for
        congestion control. Metrics that are of interest for interactive
        multimedia are:
        <list style="symbols"> 
            <t>Throughput.</t> 
            <t>Minimizing oscillations in the transmission rate (stability)
            when the end-to-end capacity varies slowly.</t>
            <t>Delay.</t> 
            <t>Reactivity to transient events.</t>
            <t>Packet losses and discards.</t>
            <!-- <t>Users' quality of experience</t>  -->
            <t>Section 2.1 of <xref target="RFC5166" /> discusses the tradeoff
            between throughput, delay and loss.</t>
        </list></t>
        
         <t>Each experiment is expected to log every incoming and outgoing
         packet (the RTP logging format is described in <xref
         target="rtp-logging" />). The logging can be done inside the
         application or at the endpoints using pcap (packet capture, e.g.,
         tcpdump, wireshark). The following are calculated based on the
         information in the packet logs:
         <list style="numbers"> 
            <t>Sending rate, Receiver rate, Goodput</t> 
            <t>Packet delay</t>
            <t>Packet loss</t>
            <t>If using, retransmission or FEC: residual loss</t>
            <t>Packets discarded from the playout or de-jitter buffer</t>
        </list></t>
        
        <!-- <t>[Editor's note: How to handle packet re-transmissions? loss before
        retransmission, after retransmission?]</t> -->
        
        <t>[Open issue (1): The "unfairness" test is (measured at 1s
        intervals):<vspace />
            1. Do not trigger the circuit breaker.<vspace />
            2. Over 3 times or less than 1/3 times the throughput for an RMCAT
            media stream compared to identical RMCAT streams competing on a
            bottleneck, for a case when the competing streams have similar
            RTTs.<vspace />
            3. Over 3 times delay compared to RTT measurements performed
            before starting the RMCAT flow or for the case when competing 
            with identical RMCAT streams having similar RTTs.<vspace />
          ]</t>
        
        <t>[Open issue (2): Possibly using Jain-fairness index.]</t>
       
        <t>Convergence time: the time taken to reach a stable rate at startup,
        after the available link capacity changes, or when new flows get added
        to the bottleneck link.</t>
        
        <!--         
        <t>[Open issue (2): Convergence time was discussed briefly in the
        design meetings. It is defined as: the time it takes the congestion
        control to reach a stable rate (at startup or after new RMCAT flows
        are added). What is a stable rate?]</t>
                 -->
        <t>Bandwidth Utilization, defined as ratio of the instantaneous
        sending rate to the instantaneous bottleneck capacity. This metric is
        useful when an RMCAT flow is by itself or competing with similar
        cross-traffic.</t>
        
        <t>From the logs the statistical measures (min, max, mean, standard
        deviation and variance) for the whole duration or any specific part of
        the session can be calculated. Also the metrics (sending rate,
        receiver rate, goodput, latency) can be visualized in graphs as
        variation over time, the measurements in the plot are at 1 second
        intervals. Additionally, from the logs it is possible to plot the
        histogram or CDF of packet delay.</t>
        
        
         <t> </t>
        
         <!-- <t> <list style="empty"> 
         <t>(i) Bandwidth Utilization: is the
        ratio of the encoding rate to the (available) end-to-end path
        capacity. 
        
        <list style="symbols"> 
            
            <t>Under-utilization: is the period of time when the endpoint's
            encoding rate is lower than the end-to-end capacity, i.e., the
            bandwidth utilization is less than 1.</t>
            
             <t>Overuse: is the period of time when the endpoint's encoding
             rate is higher than the end-to-end capacity, i.e., the bandwidth
             utilization is greater than 1.</t>
             
             <t>Steady-state: is the period of time when the endpoint's
             encoding rate is relatively stable, i.e., the bandwidth
             utilization is constant.</t>
             
        </list></t> 
        
        <t></t>
        
        <t>(ii) Packet Loss and Discard Rate.</t> <t></t>
        
        <t>(iii) Fair Share. </t> <t></t>
        
        <t>[Editor's Note: This metric should match the ones defined in the
        <xref target="I-D.jesup-rmcat-reqs">RMCAT requirements</xref>
        document.]</t> 
        <t></t>
        
        <t>(iv) Quality: There are many different types of quality metrics for
        audio and video. Audio quality is often expressed by a MOS ("Mean
        Opinion Score") and can be calculated using an objective algorithm
        (E-model/R-model). Section 4.7 of <xref target="RFC3611" /> can also
        be used for VoIP metrics. Similarly, there exist several metrics to
        measure video quality, for example Peak Signal to Noise Ratio (PSNR).
        </t>

        <t>[Editor's Note: Should the algorithm compare average PSNR of test
        video sequences or what other video quality metric can be used? If
        Quality is used as a metric, it should not be the only metric used to
        compare rate-control schemes. Also, algorithms using different codecs
        cannot be compared]. </t>

            </list>
            </t>
            -->
            
        <section title="RTP Log Format" anchor="rtp-logging">
            <t>The log file is tab or comma separated containing the following
            details:</t>
<figure><artwork><![CDATA[
        Send or receive timestamp (unix)
        RTP payload type
        SSRC
        RTP sequence no
        RTP timestamp
        marker bit
        payload size
]]></artwork></figure>

          <t>If the congestion control implements, retransmissions or FEC, the
          evaluation should report both packet loss (before applying
          error-resilience) and residual packet loss (after applying
          error-resilience).</t>
            
            <!-- <t>The retransmissions for post-repair loss metric be logged in a
            separate file, as the repair streams have different payload type
            and/or SSRC.</t> -->
        </section>
        </section>
        
        <!--
        <section title="Congestion control requirements" anchor="cc-require">
            <t> </t>
        </section>
        -->
        
        <section title="Guidelines" anchor="cc-guidelines">
            <t>A congestion control algorithm should be tested in
            simulation or a testbed environment, and the experiments should
            be repeated multiple times to infer statistical significance.
            The following guidelines are considered for evaluation:</t>
            
            <section title="Avoiding Congestion Collapse">
            <t>The congestion control algorithm is expected to take an action,
            such as reducing the sending rate, when it detects congestion.
            Typically, it should intervene before the circuit breaker <xref
            target="I-D.ietf-avtcore-rtp-circuit-breakers" /> is engaged. </t>
            
            <t>Does the congestion control propose any changes to (or diverge
            from) the circuit breaker conditions defined in <xref
            target="I-D.ietf-avtcore-rtp-circuit-breakers" />.</t> </section>
            
            <section title="Stability">
            <t>The congestion control should be assessed for its stability
            when the path characteristics do not change over time. Changing
            the media encoding rate estimate too often or by too much may
            adversely affect the application layer performance.</t>
            </section>
            
            <section title ="Media Traffic">
            <t>The congestion control algorithm should be assessed with
            different types of media behavior, i.e., the media should contain
            idle and data-limited periods. For example, periods of silence for
            audio, varying amount of motion for video, or bursty nature of
            I-frames. </t>
            
            <t>The evaluation may be done in two stages. In the first stage,
            the endpoint generates traffic at the rate calculated by the
            congestion controller. In the second stage, real codecs or models
            of video codecs are used to mimic application-limited data periods
            and varying video frame sizes.</t>
            </section>
            
            <section title="Start-up Behaviour">
            <t>The congestion control algorithm should be assessed with 
            different start-rates. The main reason is to observe the behavior
            of the congestion control in different evaluation scenarios, such 
            as when competing with varying amount of cross-traffic or how 
            quickly does the congestion control algorithm achieve a stable 
            sending rate.</t>
            
            <t>[Editor's note: requires a robust definition for unfriendliness 
            and convergence time.]</t>
            </section>
            
            <section title="Diverse Environments">
            <t>The congestion control algorithm should be assessed in
            heterogeneous environments, containing both wired and wireless
            paths. Examples of wireless access technologies are: 802.11, GPRS,
            HSPA, or LTE. One of the main challenges of the wireless
            environments for the congestion control algorithm is to
            distinguish between congestion induced loss and transmission
            (bit-error corruption) loss. Congestion control algorithms may
            incorrectly identify transmission loss as congestion loss and
            reduce the media encoding rate by too much, which may cause
            oscillatory behavior and deteriorate the users' quality of
            experience. Furthermore, packet loss may induce additional delay
            in networks with wireless paths due to link-layer
            retransmissions.</t>
            </section>
            
            <section title="Varying Path Characteristics">
            <t>The congestion control algorithm should be evaluated for a
            range of path characteristics such as, different end-to-end
            capacity and latency, varying amount of cross traffic on a
            bottleneck link and a router's queue length. For the moment, only
            DropTail queues are used. However, if new Active Queue Management
            (AQM) schemes become available, the performance of the congestion
            control algorithm should be again evaluated.</t>
            
            <t>In an experiment, if the media only flows in a single
            direction, the feedback path should also be tested with varying
            amounts of impairments.</t>
            
            <t>The main motivation for the previous and current criteria is to
            identify situations in which the proposed congestion control is
            less performant.</t>
            </section>
            
            <section title="Reacting to Transient Events or Interruptions">
            <t>The congestion control algorithm should be able to handle
            changes in end-to-end capacity and latency. Latency may change
            due to route updates, link failures, handovers etc. In mobile
            environment the end-to-end capacity may vary due to the
            interference, fading, handovers, etc. In wired networks the
            end-to-end capacity may vary due to changes in resource
            reservation.</t>
            </section>
            
            <section title="Fairness With Similar Cross-Traffic">
            <t>The congestion control algorithm should be evaluated when
            competing with other RTP flows using the same or another candidate
            congestion control algorithm. The proposal should highlight the
            bottleneck capacity share of each RTP flow.</t>
            
            <t>[Editor's note: If we define Unfriendliness then that criteria
            should be applied here.]</t>
            </section>
            
            <section title="Impact on Cross-Traffic">
            
            <t>The congestion control algorithm should be evaluated when
            competing with standard TCP. Short TCP flows may be considered
            as transient events and the RTP flow may give way to the short
            TCP flow to complete quickly. However, long-lived TCP flows may
            starve out the RTP flow depending on router queue length. </t>

            <!-- In the latter case the proposed congestion control for RTP
             should be as aggressive as <xref target="RFC5681">standard
            TCP</xref>.</t> -->
            
            <t>The proposal should also measure the impact on varied number
            of cross-traffic sources, i.e., few and many competing flows,
            or mixing various amounts of TCP and similar cross-traffic.</t>
            </section>
            
            <section title="Extensions to RTP/RTCP">
            <t>The congestion control algorithm should indicate if any
            protocol extensions are required to implement it and should
            carefully describe the impact of the extension.</t>
            </section>
            
        </section>
        
        <section title="Minimum Requirements for Evaluation">
            <t>[Editor's Note: If needed, a minimum evaluation criteria can
            be based on the above guidelines or defined tests/scenarios.]</t>
        </section>
        
        <section title="Evaluation Parameters" anchor="cc-fw">
            <t>An evaluation scenario is created from a list of network, link
            and flow characteristics. The example parameters discussed in the
            following subsections are meant to aid in creating evaluation
            scenarios and do not describe an evaluation scenario. The scenario
            discussed in <xref target="app-scenario-1" /> takes into account
            all these parameters.</t>
            
            <section title="Bottleneck Traffic Flows" 
                anchor="eval-scen-traffic">
                <t>The network scenario describes the types of flows sharing
                the common bottleneck with a single RMCAT flow, they are:
                    <list style="numbers">
                    <t>A single RMCAT flow by itself.</t>
                    <t>Competing with similar RMCAT flows. These competing
                    flows may use the same algorithm or another candidate
                    RMCAT algorithm.</t>
                    <t>Compete with long-lived TCP.</t>
                    <t>Compete with bursty TCP.</t>
                    <t>Compete with LEDBAT flows.</t>
                    <t>Compete with unresponsive interactive media flows 
                    (i.e., not only CBR).</t>
                </list></t>

                <t><xref target="fig-eval-topo" /> shows an example evaluation
                topology, where S1..Sn are traffic sources, these sources are 
                either RMCAT or a mixture of traffic flows listed above.
                R1..Rn are the corresponding receivers. A and B are routers
                that can be configured to introduce impairments. Access links 
                are in between the sender/receiver and the router, while the
                bottleneck link is between the Routers A and B.</t>
                
                <!--><t>Variant to this simple topology can be created by 
                introducing additional bottleneck links between a subset of 
                receivers and router B.</t>-->
                
<figure anchor="fig-eval-topo" title="Simple Topology">
<artwork><![CDATA[
+---+  Access                                            Access +---+   
|S1 |======= \                                         / =======|R1 |   
+---+   link \\                                       //  link  +---+   
              \\                                     //                 
+---+       +-----+         Bottleneck            +-----+       +---+   
|S2 |=======|  A  |------------------------------>|  B  |=======|R2 |   
+---+       |     |<------------------------------|     |       +---+   
            +-----+           Link                +-----+               
(...)         //                                     \\         (...)   
             //                                       \\                
+---+       //                                         \\       +---+   
|Sn |====== /                                           \ ======|Rn |   
+---+                                                           +---+   
]]></artwork>
</figure>

            <t>[Open Issue: Discuss more complex topologies]</t>

            </section>
            
            <section title="Access Links">
                <t>The media senders and receivers are typically connected to 
                the bottleneck link, common access links are:
                <list style="numbers">
                    <t>Ethernet (LAN)</t>
                    <t>Wireless LAN (WLAN) </t>
                    <t>3G/LTE</t>
                </list>
                [Open issue: point to a reference containing parameters or
                traces to model WLAN and 3G/LTE.]
                </t>
                
                <t>A real-world network typically consists of a mixture of
                links, the most important aspect is to identify the location
                of the bottleneck link. The bottleneck link can move from one
                node to another depending on the amount of cross-traffic or
                due to the varying link capacity. The design of the
                experiments should take this into account. In the simplest
                case the access link may not be the bottleneck link but an
                intermediate node.</t>
                
            </section>
            
            <section title="Example Bottleneck Link Parameters">

                <!-- The performance of the congestion control is measured in
                terms of unfairness (occupancy of the bottleneck link
                capacity), variation in end-to-end delay due to queuing
                (self-inflicted delay), etc. -->

                <t>The bottleneck link carries multiple flows, these flows may
                be other RMCAT flows or other types of cross-traffic. The
                experiments should dimension the bottleneck link based on the
                number of flows and the expected behavior. For example, if 5
                media flows are expected to share the bottleneck link equally,
                the bottleneck link is set to 5 times the desired transmission
                rate.</t>
                
                <t>If the experiment carries only media in one direction, then 
                the upstream (sender to receiver) bottleneck link carries
                media packets while the downstream (receiver to sender)
                bottleneck carries the feedback packets. The bottleneck link
                parameters discussed in this section apply only to a single
                direction, hence the bottleneck link in the reverse direction
                can choose the same or have different parameters.</t>
                
                <t>The link latency corresponds to the propagation delay of 
                the link, i.e., the time it takes for a packet to traverse the
                bottleneck link, it does not include queuing delay. In an
                experiment with several links the experiment should describe
                if the links add latency or not. It is possible for
                experiments to have multiple hops with different link
                latencies. Experiments are expected to verify that the
                congestion control is able to work in challenging situations,
                for example over trans-continental and/or satellite links. The
                experiment should pick link latency values from the following:
                
                <list style="numbers">
                    <t>Very low latency: 0-1ms</t>
                    <t>Low latency:  50ms </t>
                    <t>High latency: 150ms </t>
                    <t>Extreme latency: 300ms</t>
                </list></t>
                
                <!-- <t>[Editor's note: currently describes the latency for a 
                single link, instead of end-to-end delay. Which is preferred?
                or both?]</t> -->
                
                <t>Similarly, to model lossy links, the experiments can choose
                one of the following loss rates, the fractional loss is the
                ratio of packets lost and packets sent.
                    <list style="numbers">
                    <t>no loss: 0%</t>
                    <t>1% </t>
                    <t>5% </t>
                    <t>10%</t>
                    <t>20%</t>
                </list>
                These fractional losses can be generated using traces,
                Gilbert-Elliot model, randomly (uncorrelated) loss.</t>
            </section>
            
            <section title="DropTail Router Queue Parameters"
            anchor="scen-queue">
                <t>The router queue length is measured as the time taken to
                drain the FIFO queue, they are:
                    <list style="numbers">
                    <t>QoS-aware (or short): 70ms</t>
                    <t>Nominal: 500ms </t>
                    <t>Buffer-bloated: 2000ms</t>
                </list> 
                However, the size of the queue is typically measured in bytes
                or packets and to convert the queue length measured in
                seconds to queue length in bytes: </t>
                <t>QueueSize (in bytes) = QueueSize (in sec) x Throughput (in
                bps)/8</t> 
                <!-- <t>and 2) queue length in packets:</t>
                <t>QueueSize (in pkts) = QueueSize (in bytes)/MTU,
                MTU=1500</t> -->
                
                <!-- <t>[Open issue (11): Confirm the above values, do we need to
                                define parameters for other types of queues?]</t> -->
            </section>
            
            
            <section title="Media Flow Parameters">
                <t>The media sources can be modeled in two ways. In the first,
                the sources always have data to send, i.e., have no data
                limited intervals and are able to generate the media rate
                requested by the RMCAT congestion control algorithm. In the
                second, the traffic generator models the behavior of a media
                codec, mainly the burstiness (time-varying data produced by
                a video GOP).</t>
                
                <t>At the beginning of the session, the media sources are
                configured to start at a given start rate, they are:
                    <list style="numbers">
                        <t>200 kbps</t> 
                        <t>800 kbps</t> 
                        <t>1300 kbps</t>
                        <t>4000 kbps</t>
                    </list></t>
                
            </section>
            
            <section title="Cross-traffic Parameters">
                <t>Long-lived TCP flows will download data throughout the
                session and are expected to have infinite amount of data to
                send or receive.]</t>
                <t>[Open issue: short-lived/bursty TCP cross-traffic
                parameters are still TBD.</t>
            </section>
        </section>
        <!--
        <section title="Example Evaluation Scenarios" anchor="cc-scenario">
            <t>In the scenarios listed below, all RTP flows are
            bi-directional and point-to-point.</t>

            <t>Unless specified, the following parameters are used in each scenario:</t>
            <t><list style="symbols">
                <t>Video Start Rate: 128 kbps</t>
                <t>Maximum end-to-end delay: 300ms, packets arriving 
                after this are discarded</t>
                <t>Video Frame rate: 15 </t>
                <t>Audio packetization interval: 20ms </t>
                <t>MTU: 1450 bytes</t>
                <t>[Editor's Note: the numbers in this section are TBD]</t>
            </list></t>

            <t>Topology:<list style="symbols">
                <t>Dumbbell, the endpoint is connected to the bottleneck
                link via an access links. The bottleneck may be shared by multiple 
                endpoints.</t>
                <t>Parking lot: there are three bottleneck links arranged horizontally,
                these links are connected by access links. In this case, flows may share
                different bottleneck links.</t>
            </list></t>

            <t>[Editor's note: Should the queue-size be specified as well?].</t>


            <section title="[S1] RTP flow on a fixed link">
            <t>This scenario evaluates the ramp-up to the bottleneck capacity and 
            the stability of the proposed congestion control algorithm.</t>

            <t>This scenario uses the dumbbell topology and both the access link 
            can be ADSL (500kbps uplink, 256 downlink, 2ms one-way delay) 
            or WLAN (54Mbps, 2ms one-way delay, 2-5% packet loss rate and 
            link layer re-transmissions).  
            </t>

            <t>
            The bottleneck link can have one  of the following capacities: 
            500kbps, 1Mbps, 5Mbps and link delay: 10ms, 50ms, 120ms.
            </t>

            <t>Each congestion control algorithm should plot the variation of the 
            sending rate against time, also plot the instances of packets losses.
            Additionally, measure the time taken for the sending rate to reach 
            the end-to-end capacity (average and standard deviation over 
            10 simulation runs).
            </t>
            </section>

            <section title="[S2] RTP flow on a variable capacity link">
            
            <t>This scenario evaluates the reactivity of the proposed congestion 
            control algorithm to transient network events due to interference and
            handovers in mobile environments.</t>

            <t>This scenario uses the dumbbell topology, and both end-points use
            3G/LTE access. 
            Sample 3G/LTE (uplink and downlink) bandwidth traces are 
            available at  <xref target="SA4-EVAL"/>, loss patterns at 
            <xref target="SA4-LR"/> and the link delay: 30ms, 80ms. 
            The bottleneck link can have one  of the following capacities: 
            500kbps, 5Mbps and link delay: 20ms.</t>

            <t>Each congestion control algorithm should plot the variation of the 
            sending rate, 3G link capacity against time, also plot the 
            instances of packets losses.
            </t>
            </section>

            <section title="[S3] Fairness to RTP flows running the same congestion
            control algorithm (self-fairness)">
            
            <t>This scenario shows if the proposed
            algorithm can share the bottleneck link equitably, irrespective
            of number of flows.</t>

            <t>In this scenario there is more than one endpoint connected
            to the bottleneck link. 
            <list style="none">
                <t>(a) All the access links have the same link characteristics and
                start at the same time (see [S1]). The bottleneck link can have one of
                the following link capacity: 500kbpsm 5Mbpps and link delay 20ms.</t>

                <t>(b) The access links have different link characteristics [See S1]
                    but start at the same time.</t>

                <t>(c) An RTP flow is added at 10s intervals (upto 5 flows), 
                   the late arriving flows have increasing access link 
                   delay (0, 5, 10, 20, 50ms). 
                   The bottleneck link can have one  of the following capacities:  
                   1Mbps, 10Mbps and link delay: 10ms, 50ms, 120ms. </t>
            </list></t>

            <t>[Parking lot topology simulation: TBD]</t>
            
            </section>

            <section title="[S4 and S5] Competing with short and long TCP flows">
            <t>[Editor's Note: Remove these scenarios?]</t>
            
            <t>[S4] Competing with long-lived TCP flows: In this scenario
            the proposed algorithm is expected to be TCP-friendly, i.e., it
            should neither starve out the competing TCP flows (causing a
            congestion collapse) nor should it be starved out by TCP.</t>
            <t></t>
            
            <t>[S5] Competing with short TCP flows: Depending on the level
            of statistical multiplexing on the bottleneck link, the
            proposed algorithm may behave differently. If there are a few
            short TCP flows then the proposed algorithm may observe these
            flows as transient events and let them complete quickly.
            Alternatively, if there are many short flows then the proposed
            algorithm may have to compete with the flows as if they were
            long lived TCP flows.</t> 
            <t><xref target="TCP-eval-suite"/> contains examples of TCP traffic
            load and scenario settings.</t>
            
            <t>[Editor's Note: definition of many and
            few short TCP flows may depend on the bottleneck link
            capacity.]</t>
            <t></t>
            <t>[Editor's Note: clarify if media packets are generated using
            a traffic generator.]</t>
            </section>

            
        </section>
        -->
        
        <section title="Status of Proposals" anchor="cc-proposal">
            
            <t>Congestion control algorithms are expected to be published
            as "Experimental" documents until they are shown to be safe to
            deploy. An algorithm published as a draft should be
            experimented in simulation, or a controlled environment
            (testbed) to show its applicability. Every congestion control
            algorithm should include a note describing the environments in
            which the algorithm is tested and safe to deploy. It is
            possible that an algorithm is not recommended for certain
            environments or perform sub-optimally for the user.</t>
            
            <t>[Editor's Note: Should there be a distinction between
            "Informational" and "Experimental" drafts for congestion
            control algorithms in RMCAT. <xref target="RFC5033" />
            describes Informational proposals as algorithms that are not
            safe for deployment but are proposals to experiment with in
            simulation/testbeds. While Experimental algorithms are ones
            that are deemed safe in some environments but require a more
            thorough evaluation (from the community).]</t>
            
        </section>
        
        <section title="Security Considerations">
            <t>Security issues have not been discussed in this memo.</t>
            <!-- Congestion Collapse, Denial of Service -->
        </section>

        <section title="IANA Considerations">
            <t>There are no IANA impacts in this memo.</t>
        </section>
        
        <section anchor="contrib" title="Contributors">
            <t>The content and concepts within this document are a product of 
            the discussion carried out in the Design Team.</t>
            <t>Michael Ramalho provided the text for the scenario discussed in
            <xref target="app-scenario-1" />.</t>
        </section>
        
        <section title="Acknowledgements">
          <t> Much of this document is derived from previous work on
          congestion control at the IETF.</t>
          <t> The authors would like to thank 
          Harald Alvestrand, 
          Luca De Cicco, 
          Wesley Eddy, 
          Lars Eggert,
          Kevin Gross,
          Vinayak Hegde,
          Stefan Holmer, 
          Randell Jesup, 
          Piers O'Hanlon, 
          Colin Perkins,
          Michael Ramalho,
          Zaheduzzaman Sarker,
          Timothy B. Terriberry,
          Michael Welzl, and
          Mo Zanaty
          for providing valuable feedback on earlier versions of this draft.
          Additionally, also thank the participants of the design team for
          their comments and discussion related to the evaluation
          criteria.</t>
        </section>
    </middle>
    <back>
        <references title="Normative References"> 
        <!--&rfc2119;-->
        <!-- RTP related -->
        &rfc3550;
        &rfc3551;
        &rfc3611;
        &rfc4585;
        &rfc5506;
        <!--RMCAT related -->
        &I-D.jesup-rmcat-reqs;
        &I-D.ietf-avtcore-rtp-circuit-breakers;
        </references>
        
        <references title="Informative References"> 
        &rfc5033; <!-- CC Evaluation -->
        &rfc5166; <!-- CC Metrics -->
        &rfc5681; <!-- Standard TCP -->
        
        <!--
        &I-D.ietf-xrblock-rtcp-xr-qoe;
        <?rfc include="reference.3GPP.R1.081955"?>
        -->
        
        <reference anchor="SA4-EVAL">
            <front>
                <title>LTE Link Level Throughput Data for SA4 Evaluation Framework</title>
                <author initials="3GPP" surname="R1-081955" fullname="3GPP R1-081955">
                    <organization />
                </author>
                <date month="5" year="2008" />
                <abstract>
                <t>In R1-081720, 3GPP SA4 has requested RAN1 and RAN2 for link
                level throughput traces to be used in an evaluation framework
                they are developing for dynamic video rate adaptation.
                </t></abstract>
            </front>
            <seriesInfo name="3GPP" value="R1-081955" />
            <format type='ZIP' octets='3459875' target='http://www.3gpp.net/ftp/tsg_ran/WG1_RL1/TSGR1_53/Docs/R1-081955.zip' />
        </reference>
   
        <reference anchor="SA4-LR">
            <front>
                <title>Error Patterns for MBMS Streaming over UTRAN and GERAN</title>
                <author initials="3GPP" surname="S4-050560" fullname="3GPP S4-050560">
                    <organization />
                </author>
                <date month="5" year="2008" />
            </front>
            <seriesInfo name="3GPP" value="S4-050560" />
            <format type='ZIP' octets='335322' target='http://www.3gpp.org/FTP/tsg_sa/WG4_CODEC/TSGS4_36/Docs/S4-050560.zip' />
        </reference>

        <reference anchor="TCP-eval-suite">
          <front>
            <title>Towards a Common TCP Evaluation Suite</title>
            <author initials="A." surname="Lachlan"   fullname="Andrew Lachlan"/>
            <author initials="C." surname="Marcondes" fullname="Cesar Marcondes"/>
            <author initials="S." surname="Floyd"  fullname="Sally Floyd"/>
            <author initials="L." surname="Dunn"  fullname="Lawrence Dunn"/>
            <author initials="R." surname="Guillier"  fullname="Romeric Guillier"/>
            <author initials="W." surname="Gang"  fullname="Wang Gang"/>
            <author initials="L." surname="Eggert"  fullname="Lars Eggert"/>
            <author initials="S." surname="Ha"  fullname="Sangtae Ha"/>            
            <author initials="I." surname="Rhee"  fullname="Injong Rhee"/>
            <date month="August" year="2008"/>
          </front>
          <seriesInfo name="Proc. PFLDnet." value="2008"/>
        </reference>

        </references>
        
        <section anchor="misc"  title="Application Trade-off">
          <t>Application trade-off is yet to be defined. see <xref
          target="I-D.jesup-rmcat-reqs">RMCAT requirements</xref> document.
          Perhaps each experiment should define the application's expectation
          or trade-off.</t>
          <section anchor="misc-2"  title="Measuring Quality">
            <t>No quality metric is defined for performance evaluation, it is
            currently an open issue. However, there is consensus that
            congestion control algorithm should be able to show that it is
            useful for interactive video by performing analysis using a real
            codec and video sequences. </t>
          </section>
        </section>
        

        
        <section anchor="app-scenario-1" title="Proposal to evaluate 
        Self-fairness of RMCAT congestion control algorithm">
            
            <t>The goal of the experiment discussed in this section is to
            initially take out as many unknowns from the scenario. Later
            experiments can define more complex environments, topologies and
            media behavior. This experiment evaluates the performance of the
            RMCAT sender competing with other similar RMCAT flows (running the
            same algorithm or other RMCAT proposals) on the bottleneck link.
            There are up to 20 RMCAT flows competing for capacity, but the
            media only flows in one direction, from senders (S1..S20) to
            receivers (R1..R20) and the feedback packets flow in the reverse
            direction. </t>
            
            <t><xref target="fig-exp1" /> shows the experiment setup and it
            has subtle differences compared to the simple topology in <xref
            target="fig-eval-topo" />. Groups of 10 receivers are connected to
            the bottleneck link through two different routers (Router C and
            D). The rationale for adding these additional routers is to create
            two delay legs, i.e., two groups of endpoints with different
            network latencies and measure the performance of the RMCAT
            congestion control algorithm. If fewer than 10 sources are
            initialized, all traffic flows experience the same delay because
            they share the same delay leg. </t>
            
            
            <t>Router A has a single forward direction bottleneck link (i.e.,
            the bottleneck capacity and delay constraints applies only to the
            media packets going from the sender to the receiver, the feedback
            packets are unaffected). Hence, the Round-Trip Time (RTT) is
            primarily composed of the bottleneck queue delay and any forward
            path (propagation) latency. The main reason for not applying any
            constraints on the return path is to provide the best-case
            performance scenario for the congestion control algorithm. In
            later experiments, it is possible to add similar capacity and
            delay constraints on the return path.</t>
            
<figure anchor="fig-exp1" title="Self-fairness Evaluation Setup">
<artwork><![CDATA[                                                   
                                                                +---+
                                                          / === |R1 |
+---+                                           +-----+  //     +---+
|S1 |======= \                               / =|  C  | //           
+---+        \\                             //  +-----+ \\      (...)
              \\                           //            \\          
+---+       +-----+      Bottleneck     +-----+           \\    +---+
|S2 |=======|  A  |-------------------->|  B  |            \ ===|R10|
+---+       |     |<--------------------|     |                 +---+
            +-----+        Link         +-----+                      
(...)         //                           \\                   +---+
             //                             \\            / === |R11|
+---+       //                               \\  +-----+ //     +---+
|S20|====== /                                 \ =|  D  |//           
+---+                                            +-----+\\      (...)
                                                         \\          
                                                          \\    +---+
                                                           \ ===|R20|
                                                                +---+
]]></artwork>
</figure>
            
            
            
            <t>Loss impairments are applied at Router C and Router D, but only
            to the feedback flows. If the losses are set to 0%, it represents
            a case where the return path is over-provisioned for all traffic.
            In later experiments the loss impairments can be added to the
            media path as well. </t>
            
            
            <t> The media sources are configured to send infinite amount of
            data, i.e., the sources always have data to send and have no data
            limited intervals. Additionally, the media sources are always 
            successful in generating the media rate requested by the RMCAT 
            congestion control algorithm. In this experiment, we avoid the 
            potentially complicated scenario of using media traffic generators 
            that try to model the behavior of media codecs (mainly the 
            burstiness). </t>




        <section title="Evaluation Parameters">
            <section title="Media Traffic Generator">
            <t>The media source always generates at the rate requested by the
            congestion control and has infinite data to send. Furthermore, the
            media packet generator is subject to the following constraints:
            <list style="numbers">
                <t>It MUST emit a packet at least once per 100 ms time
                interval.</t>
                
                <t>For low media rate source: when generating data at a rate
                less than a maximum length MTU every 100 ms would allow (e.g.,
                120 kbps = 1500 bytes/packet * 10 packets/sec * 8 bits/byte),
                the RMCAT source must modulate the packet size (RTP payload
                size) of RTP packets that are sent every 100 ms to attain the
                desired rate.</t>
                
                <t>For high media rate sources: when generating data at a rate
                greater than a maximum length MTU every 100 ms would allow,
                the source must do so by sending (approximately) maximum MTU
                sized packets and adjusting the inter-departure interval to be
                approximately equal. The intent of this to ensure the data is
                sent relatively smoothly independent of the bit rate, subject
                to the first constraint.</t>
            </list></t>
            </section>
            
            <section title="Bottleneck Link Bandwidth">
            <t>The bottleneck link capacity is dimensioned such that each
            RMCAT flow in an ideal situation with perfectly equal capacity
            sharing for all the flows on the bottleneck obtains the following
            throughputs: 200 kbps, 800 kbps, 1.3 Mbps and 4 Mbps.<vspace/>
            
            For example, experiments with five RMCAT flows with an 800
            kbps/flow target rate should set the bottleneck link capacity to 4
            Mbps. </t>
            </section>
            
            <section title="Bottleneck Link Queue Type and Length">
            <t>The bottleneck link queue (Router A) is a simple FIFO queue
            having a buffer length corresponding to 70 ms, 500 ms or 2000 ms 
            (defined in <xref target="scen-queue" />) of delay at the
            bottleneck link rate (i.e., actual buffer lengths in bytes are
            dependent on bottleneck link bandwidth).</t>
            </section>
            
            <section title="RMCAT flows and delay legs">
            <t>Experiments run with 1, 3, 5, 10 and 20 RMCAT sources, they are 
            outlined as follows:
             <list style="numbers">
                 <t>Experiments with 1, 3, and 5 RMCAT flows, all RMCAT flows 
                 commence simultaneously. A single delay leg is used and
                 the link latency is set to one of the following : 
                 0 ms, 50 ms and 150 ms.
                 </t>
                 <t> For 10 and 20 source experiments where all RMCAT flows
                 begin simultaneously the sources are split evenly into two
                 different bulk delay legs. One leg is set to 0 ms bulk delay
                 leg and the other is set to 150 ms.                 
                  </t>
                  <t>For 10 and 20 source experiments where the first set will
                  use 0 ms of bulk delay and the second set will use 150 ms
                  bulk delay.
                  <list style="numbers">
                      <t>Random starts within interval [0 ms, 500 ms].</t>
                      <t>One “early-coming” flow (i.e., the 1st flow starting
                      and achieving steady-state before the next N-1
                      simultaneously begin). </t>
                      <t>One “late-coming” flow (i.e., the Nth flow starting
                      after steady-state has occurred for the existing N-1
                      flows). </t>
                  </list>
                  These cases assess if there are any early or late-comer
                  advantages or disadvantages for a particular algorithm and
                  to see if any unfairness is reproducible or
                  unpredictable.</t>
                  
             </list></t>
             <t> [Open issue (A.1): which group does the early and late flow
             belong to?] </t>
             <t>[Open issue (A.2): Start rate for the media flows]</t>
             
            </section>
            
            <section title="Impairment Generator">
                <t>Packet loss is created in the reverse path (affects only
                feedback packets). Cases of 0%, 1%, 5% and 10% are studied for
                the 1, 3, and 5 RMCAT flow experiments, losses are not applied
                to flows with 10 or 20 RMCAT flows. </t>
            </section>
        </section>
        
        <section title="Proposed Passing Criteria">
            <t>[Editor's note: there has been little or no discussion on the 
            below criteria, however, they are listed here for the sake of 
            completeness.</t>
            <t>No unfairness is observed, i.e., at steady state each flow
            attains a throughput between [ B/(3*N), (3*B)/N ], where B is the
            link bandwidth and N is the number of flows.</t>
            <t>No flow experiences packet loss when queue length is set to 500
            ms or greater.</t>
            <t>All individual sources must be in their steady state within
            twenty LRTTs (where LRTT is defined as the RTT associated with the
            flow with the Largest RTT in the experiment). ]</t>
        </section>
        
        <section title="Extensibility of the Experiment">
            <t>The above scenario describes only RMCAT sources competing for 
            capacity on the bottleneck link, however, future experiments can 
            use different types of cross-traffic (as described in <xref 
            target="eval-scen-traffic" />).</t>
            
            <t>Currently, the forward path (carrying media packets) is
            characterized to add delay and a fixed bottleneck link capacity,
            in the future packet losses and capacity changes can be applied to
            mimic a wireless link layer (for e.g., WiFi, 3G, LTE).
            Additionally, only losses are applied to the reverse path
            (carrying feedback packets), later experiments can apply the same
            forward path (carrying media packets) impairments to the reverse
            path.</t>
            
        </section>
            
        </section>
        
        <section anchor="App-cl" title="Change Log"> 
        <t>Note to the RFC-Editor: please remove this section prior to
        publication as an RFC.</t>
            <section title="Changes in draft-singh-rmcat-cc-eval-04">
            <t><list style="symbols">
                <t>Incorporate feedback from IETF 87, Berlin.</t>
                <t>Clarified metrics: convergence time, bandwidth
                utilization.</t>
                <t>Changed fairness criteria to fairness test.</t>
                <t>Added measuring pre- and post-repair loss.</t>
                <t>Added open issue of measuring video quality to
                appendix.</t>
                <t>clarified use of DropTail and AQM.</t>
                <t>Updated text in "Minimum Requirements for Evaluation"</t>

            </list></t> 
            </section>
            <section title="Changes in draft-singh-rmcat-cc-eval-03">
            <t><list style="symbols">
                <t>Incorporate the discussion within the design team.</t>
                <t>Added a section on evaluation parameters, it describes the 
                flow and network characteristics.</t>
                <t>Added Appendix with self-fairness experiment.</t>
                <t>Changed bottleneck parameters from a proposal to an example
                set.</t>
                <t></t>
            </list></t> 
            </section>

            <section title="Changes in draft-singh-rmcat-cc-eval-02">
            <t><list style="symbols">
                <t>Added scenario descriptions.</t>
            </list></t> 
            </section>

            <section title="Changes in draft-singh-rmcat-cc-eval-01">
            <t><list style="symbols">
                <t>Removed QoE metrics.</t>
                <t>Changed stability to steady-state.</t> 
                <t>Added measuring impact against few and many
                flows.</t>
                <t>Added guideline for idle and data-limited periods.</t>
                <t>Added reference to TCP evaluation suite in example
                evaluation scenarios.</t>
            </list></t> 
            </section>
        </section>
    </back>
</rfc>
